#!/bin/bash

user=$1
pass=$2
port=$3
errr=0

#-------------------------------------------------{ wget parameters }---------------------------------------------------
header="Content-Type: application/json"
data_file="/tmp/jboss_wget_jvm_data_$port"
wget="wget -qO- http://$user:$pass@localhost:$port/management"

#-------------------------------------------{ common parts in post data }-----------------------------------------------
close="\"}]}"
adres="\",\"address\":[{\""
start="{\"operation\":\"read-attribute\",\"name\":\""
mbean="${adres}core-service\":\"platform-mbean\"},{\"type\":\""
deplm="${adres}deployment\":\"application.war\"},{\"subsystem\":\""
datas="${adres}subsystem\":\"datasources\"},{\"data-source\":\"DataaccessDS\"},{\"statistics\":\""
garbg="${mbean}garbage-collector\"},{\"name\":\""
mpool="${mbean}memory-pool\"},{\"name\":\""

#---------------------------------------------{ construct post strings }------------------------------------------------
data=(
    "heap-memory-usage${mbean}memory"
    "non-heap-memory-usage${mbean}memory"
    "collection-time${garbg}PS_MarkSweep"
    "collection-count${garbg}PS_MarkSweep"
    "collection-time${garbg}PS_Scavenge"
    "collection-count${garbg}PS_Scavenge"
    "daemon-thread-count${mbean}threading"
    "peak-thread-count${mbean}threading"
    "thread-count${mbean}threading"
    "total-started-thread-count${mbean}threading"
    "loaded-class-count${mbean}class-loading"
    "unloaded-class-count${mbean}class-loading"
    "total-loaded-class-count${mbean}class-loading"
    "AvailableCount${datas}pool"
    "InUseCount${datas}pool"
    "MaxWaitCount${datas}pool"
    "uptime${mbean}runtime"
    "active-sessions${deplm}undertow"
    "sessions-created${deplm}undertow"
    "usage${mpool}Code_Cache"
    "usage${mpool}PS_Old_Gen"
)

#-------------------------------------------{ Get data from jboss jvm }-------------------------------------------------
raw=$(for I in "${data[@]}"; { $wget --header="$header" --post-data="$start$I$close"; }); errr=$(($errr+$?))
raw=( ${raw//[a-Z\{\}\:\"\=\>\,]/} )

#-----------------------------------{ Save data to file in an indexed array form }--------------------------------------
cat > "$data_file" << EOF
#!/bin/bash
declare -A data

data['heap init']=${raw[0]}
data['heap used']=${raw[1]}
data['heap committed']=${raw[2]}
data['heap max']=${raw[3]}

data['non heap init']=${raw[4]}
data['non heap used']=${raw[5]}
data['non heap committed']=${raw[6]}
data['non heap max']=${raw[7]}

data['gc marksweep collection-time']=${raw[8]}
data['gc marksweep collection-count']=${raw[9]}
data['gc scavenge collection-time']=${raw[10]}
data['gc scavenge collection-count']=${raw[11]}

data['thread count daemon']=${raw[12]}
data['thread count peak']=${raw[13]}
data['thread count']=${raw[14]}
data['thread count total started']=${raw[15]}

data['class count loaded']=${raw[16]}
data['class count unloaded']=${raw[17]}
data['class count total loaded']=${raw[18]}

data['data source available count']=${raw[19]}
data['data source in use count']=${raw[20]}
data['data source max wait count']=${raw[21]}

data['jvm uptime']=${raw[22]}

data['application active sessions']=${raw[23]}
data['application sessions created']=${raw[24]}

data['memory-pool code_cache init']=${raw[25]}
data['memory-pool code_cache used']=${raw[26]}
data['memory-pool code_cache committed']=${raw[27]}
data['memory-pool code_cache max']=${raw[28]}

data['memory-pool ps_old_gen init']=${raw[29]}
data['memory-pool ps_old_gen used']=${raw[30]}
data['memory-pool ps_old_gen committed']=${raw[31]}
data['memory-pool ps_old_gen max']=${raw[32]}

echo \${data[\${1,,}]}
EOF

errr=$(($errr+$?))
chmod +x "$data_file"
echo $errr
